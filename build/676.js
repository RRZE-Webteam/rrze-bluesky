"use strict";(self.webpackChunkrrze_elements=self.webpackChunkrrze_elements||[]).push([[676],{676:function(e,n,r){r.r(n),r.d(n,{ParseErrorBuilder:function(){return t}});var i=r(179);const t={r(){return new i.P({code:i.c.BadSignature,reason:"missing WEBVTT file header",line:1})},s(e,n){return new i.P({code:i.c.BadTimestamp,reason:`cue start timestamp \`${e}\` is invalid on line ${n}`,line:n})},t(e,n){return new i.P({code:i.c.BadTimestamp,reason:`cue end timestamp \`${e}\` is invalid on line ${n}`,line:n})},u(e,n,r){return new i.P({code:i.c.BadTimestamp,reason:`cue end timestamp \`${n}\` is greater than start \`${e}\` on line ${r}`,line:r})},y(e,n,r){return new i.P({code:i.c.BadSettingValue,reason:`invalid value for cue setting \`${e}\` on line ${r} (value: ${n})`,line:r})},x(e,n,r){return new i.P({code:i.c.UnknownSetting,reason:`unknown cue setting \`${e}\` on line ${r} (value: ${n})`,line:r})},w(e,n,r){return new i.P({code:i.c.BadSettingValue,reason:`invalid value for region setting \`${e}\` on line ${r} (value: ${n})`,line:r})},v(e,n,r){return new i.P({code:i.c.UnknownSetting,reason:`unknown region setting \`${e}\` on line ${r} (value: ${n})`,line:r})},T(e,n){return new i.P({code:i.c.BadFormat,reason:`format missing for \`${e}\` block on line ${n}`,line:n})}}}}]);